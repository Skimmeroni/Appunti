\begin{sile}

    \subsection{Definizione del problema}

        Sia \math{V = (v_{1}, v_{2}, \unicodeellipsis, v_{n})} un vettore 
        composto da numeri interi (positivi e/o negativi). Il peso di un
        vettore é definito come la somma dei suoi elementi; per convenzione,
        il peso del vettore nullo si assume essere zero.

        \begin[mode = display]{math}
            V{(A)} =
            \{\table[columnalign = left]{
                \sum_{i = 1}^{|A|} v_{i} & \mi{se} \thickspace A \ne \varnothing \\
                0 & \mi{se} \thickspace A = \varnothing \\
            }
        \end{math}

        Si dice \strong{sottovettore} di \math{V} un qualunque vettore \math{V' =
        (v_{h}, v_{h + 1}, \unicodeellipsis, v_{k})} con \math{1 \leq h \leq k
        \leq n}. Sia \math{\mi{SV}(V)} l'insieme che contiene tutti i sottovettori
        costruibili a partire da \math{V}.

        \begin[mode = display]{math}
            \mi{SV}(V) = \{(v_{h}, v_{h + 1}, \unicodeellipsis, v_{k}) |
                            1 \leq h \leq k \leq n\}
        \end{math}

        Il \strong{problema del sottovettore di peso massimo}
        (\strong{HSV}) richiede di trovare, per un vettore \math{V},
        il sottovettore \math{V*} che, fra tutti i sottovettori di
        \math{\mi{SV}(V)}, é quello avente peso complessivo massimo.

        \begin{example}
            Dato il vettore \math{V = (3, -5, 10, 2, -3, 1, 4, -8, 7, -6, 1)},
            il sottovettore di peso massimo é \math{V* = (10, 2, -3, 1, 4)},
            avente peso 14.
        \end{example}

        Attaccare il problema HSV direttamente tramite programmazione
        dinamica é complesso. Un miglior approccio consiste nel restringere
        i requisiti del problema per considerarne una versione semplificata.

        Una versione piú semplice del problema HSV, chiamato \strong{HSV
        vincolato}, richiede di trovare, fra tutti i sottovettori costruibili
        a partire da un vettore \math{V}, quello avente peso complessivo
        massimo e avente l'ultimo elemento coincidente con l'ultimo elemento
        del vettore originario.

    \subsection{Programmazione dinamica: equazione di ricorrenza}

        Dato un vettore \math{V} avente cardinalitá \math{n},
        sia \math{V_{i}} il sottovettore \math{(v_{1}, v_{2},
        \unicodeellipsis, v_{i})}. La soluzione \math{S_{i}}
        per l'\math{i}-esima istanza del problema corrisponde
        a trovare la soluzione ottimale per il problema HSV
        vincolato rispetto al sottovettore \math{V_{i}}. La
        soluzione per l'intero vettore \math{V} é la soluzione
        per l'istanza \math{V_{n}}. Il peso del sottovettore di
        peso massimo per la \math{i}-esima istanza del problema
        viene indicato con \math{\mi{Opt}(i)}.

        Il caso base dell'equazione di ricorrenza é immediato: se il
        vettore é il vettore nullo, allora il sottovettore di peso massimo
        piú lungo vincolato é esso stesso il vettore nullo. D'altro canto,
        se il vettore é composto da un solo elemento, tale elemento deve
        essere parte per definizione della soluzione ottima per tale istanza
        del problema, ed é inoltre l'unico elemento di tale soluzione.

        \begin[width = 50%fw]{parbox}
            \begin[mode = display]{math}
                \table[columnalign = left]{
                    S_{0} = \epsilon \\
                    S_{1} = (v_{1}) \\
                }
            \end{math}
        \end{parbox}
        \begin[width = 50%fw]{parbox}
            \begin[mode = display]{math}
                \table[columnalign = left]{
                    \mi{Opt}(0) = \abs{S_{0}} = 0 \\
                    \mi{Opt}(1) = \abs{S_{1}} = v_{1} \\
                }
            \end{math}
        \end{parbox}
        \par

        Per quanto riguarda il passo ricorsivo, si assuma di avere a
        disposizione tutte le soluzioni \math{S_{i - 1}, S_{i - 2},
        \unicodeellipsis} e di voler calcolare \math{S_{i}}. Dato che
        il problema HSV vincolato richiede di trovare il sottovettore
        di peso massimo che termini con l'ultimo elemento del vettore,
        deve per forza aversi \math{v_{i} \in S_{i}}.

        L'unica scelta da compiere in merito a tale soluzione é se includere
        o non includere anche la \math{i - 1}-esima soluzione ottimale. Se
        tale soluzione ha un peso negativo, allora accodando \math{S_{i - 1}}
        a \math{v_{i}} si otterrebbe un vettore con peso inferiore del solo
        \math{v_{i}}, e quindi una soluzione peggiore di \math{(v_{i})}.
        Se tale soluzione ha invece un peso positivo, allora accodando
        \math{S_{i - 1}} a \math{v_{i}} si otterrebbe un vettore con peso
        superiore del solo \math{v_{i}}, e quindi una soluzione migliore di
        \math{(v_{i})}.

        \begin[width = 50%fw]{parbox}
            \begin[mode = display]{math}
                S_{i} =
                \{\table[columnalign = left]{
                    v_{i} & \mi{se} \thickspace \mi{Opt}(i - 1) < 0 \\
                    S_{i - 1} \cup v_{i} & \mi{se} \thickspace \mi{Opt}(i - 1) > 0 \\
                }
            \end{math}
        \end{parbox}
        \begin[width = 50%fw]{parbox}
            \begin[mode = display]{math}
                \mi{Opt} {(i)} =
                \{\table[columnalign = left]{
                    v_{i} & \mi{se} \thickspace \mi{Opt}(i - 1) < 0 \\
                    \mi{Opt}(i - 1) + v_{i} & \mi{se} \thickspace \mi{Opt}(i - 1) > 0 \\
                }
            \end{math}
        \end{parbox}

      \subsection{Programmazione dinamica: implementazione bottom-up}

        L'algoritmo bottom-up viene costruito a partire dall'equazione
        di ricorrenza sfruttando un vettore \math{c}. In ciascuna cella
		\math{c[i]} viene riportato il valore della soluzione ottimale
		per la \math{i}-esima istanza del problema, che viene utilizzata
		per calcolare i valori ottimali per le istanze successive.
		L'algoritmo riceve in input il vettore \math{V} e restituisce
		in output il vettore \math{c}.

        \begin{verbatim}
		procedure HSV(V)
		    c[0] \unichar{U+2190} 0
		    c[1] \unichar{U+2190} V[1]

		    \bigskip
		    for i \unichar{U+2190} 2 to |V| do
		        if (c[i - 1] < 0) then
		            c[i] \unichar{U+2190} V[i]
		        else
		            c[i] \unichar{U+2190} c[i - 1] + V[i]

		   \bigskip
		    return c
	\end{verbatim}

        É facile notare come il tempo di esecuzione dell'algoritmo sia
        \math{O(n)}, dove \math{n} é la lunghezza del vettore \math{V}.
        Questo perché tale algoritmo é composto da un solo ciclo che
        esegue per \math{n} volte una istruzione con tempo di esecuzione
        immediato.

    \subsection{Programmazione dinamica: ricostruzione della soluzione}

        Una volta calcolate le lunghezze degli HSV vincolate, é possibile
        ricostruire ciascuna di queste a partire il vettore \math{c}. Alla
        vecchia procedura ne viene aggiunta un'altra, \tt{PRINT-HSV}. Questa
        ha in input il vettore \math{c}, il vettore \math{V} ed un indice
        di posizione \math{i}, mentre in output ha il sottovettore di peso
        massimo per l'\math{i}-esimo prefisso di \math{V}. 

	\begin[width = 50%fw]{parbox}
		\begin{verbatim}
			procedure HSV(V)
			    c[0] \unichar{U+2190} 0
			    c[1] \unichar{U+2190} V[1]

			    \bigskip
			    for i \unichar{U+2190} 2 to |V| do
			        if (c[i - 1] < 0) then
			            c[i] \unichar{U+2190} V[i]
			        else
			            c[i] \unichar{U+2190} c[i - 1] + V[i]

			    \bigskip
			    return c
		\end{verbatim}
	\end{parbox}
	\begin[width = 50%fw]{parbox}
		\begin{verbatim}
		    procedure PRINT-HSV(V, c, i)
		        if c[i] \unichar{U+2260} V[i] then
		            PRINT-HSV(V, c, i - 1)
		        print V[i]
		\end{verbatim}
	\end{parbox}
	\par

        Sebbene la procedura sia ricorsiva, il suo tempo di esecuzione
        é comunque proporzionale alle dimensioni del vettore \math{c},
		perché la ricorsione é una tail-recursion.

    \subsection{Osservazioni}

        Il problema HSV non vincolato puó essere ridotto al problema HSV
        vincolato. Infatti, la soluzione del problema HSV non vincolato non
        é altro che la maggior soluzione parziale del problema HSV vincolato.

\end{sile}
