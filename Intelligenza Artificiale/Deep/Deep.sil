\begin{sile}

	Come giá detto, un percettrone non é in grado di operare
	la sua classificazione in presenza di un dataset non
	linearmente separabile. Diventa quindi fondamentale, se
	é possibile, trasformare dataset non linearmente separabili
	in dataset che lo sono. Uno dei possibili approcci prevede
	di introdurre un attributo aggiuntivo agli elementi del
	dataset, di modo che la dimensione dell'iperpiano su cui i
	suoi elementi giacciono aumenti di uno e diventi possibile
	costruire una iperretta che ne separi linearmente gli elementi.

	Questo viene in genere fatto a partire da una trasformazione
	dei valori degli attributi noti. Naturalmente, una trasformazione
	di questo tipo dovrá essere non lineare, altrimenti non si otterrá
	mai un dataset linearmente separabile. Determinare quali e quanti
	attributi sia necessario introdurre nel dataset per compiere questa
	operazione non é un problema banale; inoltre, introdurre nuovi
	attributi nel dataset introduce inevitabilmente anche del rumore.

	Anziché individuare manualmente gli attributi in questione,
	é possibile automatizzare il processo. L'idea é quella di
	"concatenare" piú percettroni, dove l'output di uno \em{strato}
	di percettroni fanno da attributi in input dello strato successivo.
	I percettroni piú vicini all'input "grezzo" cercano di determinare
	quali siano gli attributi rilevanti per operare la classificazione
	(e rendere il dataset linearmente separabile), mentre quelli piú
	lontani compiono la classificazione in sé. L'output dell'ultimo
	strato é l'output finale dell'insieme di percettroni.

\end{sile}
