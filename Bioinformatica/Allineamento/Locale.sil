\begin{sile}

	Vi sono situazioni in cui non si ha particolare interesse a trovare un
	allineamento globale (ottimale) fra due intere sequenze, ma solamente
	rispetto a delle loro sottosequenze. Si consideri ad esempio il voler
	allineare una sequenza codificante con un genoma intero per individuare
	dove questa si posiziona: se si comparassero le due sequenze per intero,
	sarebbe ovvio che qualsiasi allineamento globale fra le due conterrebbe
	moltissimi indel e non fornirebbe alcuna informazione rilevante.

	Date due sequenze \math{X} e \math{Y}, il \strong{problema dell'allineamento
	locale di due sequenze} (\strong{local sequence alignment problem}) consiste
	nel trovare una sottosequenza \math{\alpha} di \math{X} ed una sottosequenza
	\math{\beta} di \math{Y} tali per cui il loro allineamento globale ottimale é
	quello che, fra tutte le possibili combinazioni di sottostringhe di \math{X}
	e di \math{Y}, restituisce il valore massimo.

	Date due sequenze \math{X} e \math{Y} di lunghezza rispettivamente \math{m}
	e \math{n}, il problema dell'allineamento locale potrebbe essere risolto in
	maniera banale semplicemente calcolando ogni possibile sottosequenza di
	\math{X} ed ogni possibile sottosequenza di \math{Y}, per poi cercare quale
	sia la coppia di sottosequenze cosí costruite avente l'allineamento globale
	ottimale di valore massimo (ad esempio operando l'algoritmo di Needleman-Wunsch).
	Un approccio di questo tipo é peró proibitivo in termini computazionali, perché
	si avrebbe un tempo di esecuzione pari a \math{O(n^{3}m^{3})}.

	\begin{example}
		Siano date le stringhe \math{X = pqraxabcstvq} e \math{Y =
		xyaxbacsll}. Sia poi data a ciascuna corrispondenza un valore
		di 2, ogni mancata corrispondenza un valore di -2 e ad ogni
		indel un valore di -1. Le due sottostringhe prese da ciascuna
		stringa tali che siano le piú simili possibili sono \math{\alpha
		= axabcs} e \math{\beta = axbacs}, che hanno somiglianza pari ad 8:

		\begin[mode = display]{math}
			\table{
				a & x & a & b & - & c & s \\
				a & x & - & b & a & c & s \\
			}
		\end{math}
	\end{example}

	Anziché attaccare il problema dell'allineamento locale di due sequenze
	direttamente, se ne consideri il problema ausiliario in cui si osservano
	solamente i prefissi. Ovvero, anziché trovare le due sottosequenze aventi
	il valore di allineamento globale ottimo massimo fra tutte le sottosequenze
	possibili, si richiede di trovare i due prefissi aventi il valore di
	allineamento globale ottimo massimo fra tutti i prefissi possibili.

	La soluzione ottimale per il problema ausiliario in questione viene
	ricavata immediatamente a partire dalla matrice di programmazione
	dinamica per l'algoritmo di Needleman-Wunsch. Infatti, date due
	sequenze \math{X} e \math{Y}, ciascuna cella \math{i, j} di tale
	matrice contiene la soluzione ottimale del problema dell'allineamento
	globale per i prefissi \math{X_{i} = [1 : i]} e \math{Y_{j} = [1 : j]},
	che sono precisamente le soluzioni ammissibili per il problema ausiliario
	in esame. La soluzione ottimale di tale problema non é allora altro che
	la cella di tale matrice, quale che sia, avente il valore maggiore.

	Ci si chiede allora come passare dal problema ausiliario (prefissi
	con allineamento globale migliore possibile) al problema principale
	(sottosequenze con allineamento globale migliore possibile). Siano
	\math{X_{p}} e \math{Y_{q}} i due prefissi che hanno il massimo valore
	di allineamento globale fra tutte le coppie di prefissi costruibili a
	partire da \math{X} e da \math{Y}. Le due sottosequenze \math{\alpha}
	e \math{\beta} che hanno il massimo valore di allineamento globale fra
	tutte le sottosequenze costruibili a partire da \math{X} e da \math{Y}
	saranno necessariamente dei suffissi di, rispettivamente, \math{X_{p}}
	e \math{Y_{q}}. Ovvero, deve esistere una coppia di indici \math{h, k}
	con \math{0 < h \leq p} e \math{0 < k \leq q} tali per cui \math{\alpha
	= X[h : p]} e \math{\beta = [k : q]}.

	É allora possibile vedere ciascuno dei due prefissi \math{X_{p}}
	e \math{Y_{q}} di, rispettivamente, \math{X} e \math{Y}, come la
	concatenazione di un altro prefisso della medesima sequenza di cui
	é prefisso, ma di lunghezza minore, ovvero rispettivamente \math{X_{h}}
	e \math{Y_{k}}, con una delle due sottosequenze che si ha interesse a
	ricavare, rispettivamente \math{\alpha} e \math{\beta}. I due prefissi
	\math{X_{h}} e \math{Y_{k}} non sono casuali: infatti, é garantito che
	il loro valore di allineamento globale ottimale sia inferiore o uguale
	a 0. Questo perché, se cosí non fosse, allora potrebbero venire aggiunti
	in testa rispettivamente ad \math{\alpha} e a \math{\beta} ottenendo
	due sottosequenze di \math{X} e di \math{Y} che hanno un allineamento
	globale ottimale di dimensione maggiore rispetto al valore dell'allineamento
	globale ottimale per \math{\alpha} e \math{\beta}, ma si é assunto per ipotesi
	che sia tale coppia di sottosequenze ad essere quella con allineamento globale
	ottimale massimo.

	Siano \math{h'} e \math{k'} due indici tali per cui \math{0 < h' < h} e
	\math{0 < k' < k}. Se, da come é stato mostrato, l'allineamento globale
	ottimale per i prefissi \math{X_{h}} e \math{Y_{k}} é negativo, allora
	il valore dell'allineamento globale ottimale per \math{\alpha} e \math{\beta}
	deve essere maggiore del valore dell'allineamento globale ottimale per i
	prefissi \math{X_{h'}} e \math{Y_{k'}}, per qualsiasi coppia di indici
	\math{h'} e \math{k'}. Questo equivale a dire che, per qualsiasi \math{h'}
	e \math{k'}, il valore dell'allineamento globale ottimale della coppia di
	sottosequenze \math{X[h' : h - 1]} e \math{Y[k' : k - 1]} é negativo a sua
	volta.

	Sono stati introdotti tutti gli elementi per risolvere il problema
	dell'allineamento locale di due sequenze mediante programmazione
	dinamica: l'algoritmo in questione prende il nome di \strong{Algoritmo
	di Smith-Waterman}. Anziché affrontare il problema direttamente, é piú
	efficiente prima trovare il valore di un possibile allineamento locale
	ottimale di due sequenze e poi, sulla base di questa informazione,
	ricostruire l'allineamento locale "a ritroso". Pertanto, il problema
	effettivamente in esame sará il problema del valore dell'allineamento
	locale fra due sequenze.

	Date due sequenze \math{X} e \math{Y} rispettivamente di
	lunghezza \math{m} e \math{n}, siano \math{X_{i} = X[1 : i]}
	e \math{Y_{j} = Y[1 : j]} i prefissi di lunghezza \math{i} e
	\math{j} delle rispettive sequenze. Sia poi \math{d} una matrice
	di score. La soluzione \math{S_{i, j}} per l'\math{i, j}-esima
	istanza del problema corrisponde a trovare la soluzione ottimale
	per il problema del valore dell'allineamento locale ottimale
	rispetto alle sottosequenze \math{X[h : i]} e \math{Y[k : j]},
	per ogni possibile \math{0 < h < i} e \math{0 < k < j}. La
	soluzione per le intere sequenze \math{X} e \math{Y} è la
	soluzione parziale, quale che sia, avente valore massimo.

	Il caso base dell'equazione di ricorrenza é semplice da
	determinare: se una delle due sequenze é la sequenza vuota,
	allora non c'é alcun allineamento locale ottimale fra le
	due. Ovvero, il valore della soluzione ottimale é nullo.

	\begin[mode = display]{math}
		S_{0, 0} = S_{i, 0} = S_{0, j} = 0
	\end{math}

	Per quanto riguarda il passo ricorsivo, si faccia riferimento
	alle considerazioni fatta in precedenza. Se la soluzione del
	problema di allineamento globale rispetto ad un determinato
	prefisso é negativo, allora é garantito che le sottosequenze
	che lo hanno indotto non possono fare parte dell'allineamento
	locale. Se questo si verifica, allora il valore dell'allineamento
	locale di tali prefissi é nullo, se invece non lo é, é sufficiente
	rifarsi alle possibili soluzioni locali dell'algoritmo di
	Needleman-Wunsch.

	Non essendo noto a priori quali siano i caratteri che compaiono
	nell'allineamento locale ottimale, é sufficiente limitarsi a
	scegliere il valore che, fra questi, massimizza la soluzione
	ottima:

	\begin[mode = display]{math}
		S_{i, j} = \mi{max}\{S_{i - 1, j - 1} + d(X[i], Y[j]),
		S_{i - 1, j} + d(X[i], -), S_{i, j - 1} + d(-, Y[j]), 0\}
	\end{math}

	A differenza dell'algoritmo di Needleman-Wunsch, la ricostruzione
	della soluzione viene fermata quando viene trovato un valore nullo,
	non quando si raggiunge la cella (0, 0). Questo perché, per il modo
	in cui l'equazione di ricorrenza é stata definita, tutti i valori
	delle celle a questa precedente saranno 0 a sua volta, e quindi
	irrilevanti.

	\begin{code}
		\begin{verbatim}
			procedure SMITH-WATERMAN(X, Y, D)
			    for i \unichar{U+2190} 0 to |X| do
			        c[i, 0] \unichar{U+2190} 0
			    for j \unichar{U+2190} 0 to |Y| do
			        c[0, j] \unichar{U+2190} 0

			    \bigskip
			    best \unichar{U+2190} 0
			    for i \unichar{U+2190} 1 to |X| do
			        for j \unichar{U+2190} 1 to |Y| do
			            t\textsubscript{1} \unichar{U+2190} c[i - 1, j] + D[X[i], -]
			            t\textsubscript{2} \unichar{U+2190} c[i, j - 1] + D[-, Y[j]]
			            t\textsubscript{3} \unichar{U+2190} c[i - 1, j - 1] + D[X[i], Y[j]]
			            if (t\textsubscript{1} \unichar{U+2265} t\textsubscript{2} and t\textsubscript{1} \unichar{U+2265} t\textsubscript{3} and t\textsubscript{1} > 0) then
			                c[i, j] \unichar{U+2190} t\textsubscript{1}
			            else if (t\textsubscript{2} \unichar{U+2265} t\textsubscript{1} and t\textsubscript{2} \unichar{U+2265} t\textsubscript{3} and t\textsubscript{2} > 0) then
			                c[i, j] \unichar{U+2190} t\textsubscript{2}
			            else if (t\textsubscript{3} \unichar{U+2265} t\textsubscript{1} and t\textsubscript{3} \unichar{U+2265} t\textsubscript{2} and t\textsubscript{3} > 0) then
			                c[i, j] \unichar{U+2190} t\textsubscript{3}
			            else
			                c[i, j] \unichar{U+2190} 0
			            if (c[i, j] > best) then
			                best \unichar{U+2190} c[i, j]

			    \bigskip
			    return best
		\end{verbatim}
	\end{code}

	Si noti come il tempo di esecuzione dell'algoritmo rimanga comunque
	lineare nella lunghezza delle sequenze.

\end{sile}
